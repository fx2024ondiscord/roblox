local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")

local Library = {
    Flags = {},
    Theme = {
        MainColor = Color3.fromRGB(30, 30, 30),
        AccentColor = Color3.fromRGB(255, 50, 100),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(40, 40, 40)
    },
    Credits = {
        Creator = "Fx_2024",
        Discord = "Fx_2024",
        Version = "1.0.0"
    },
    Keybinds = {},
    Profiles = {}
}

local function Tween(obj, time, properties)
    return TweenService:Create(obj, TweenInfo.new(time), properties):Play()
end

local function SaveConfig(name)
    local config = {}
    for flag, value in pairs(Library.Flags) do
        config[flag] = value
    end
    writefile("SexyUI/configs/" .. name .. ".json", HttpService:JSONEncode(config))
end

local function LoadConfig(name)
    local config = HttpService:JSONDecode(readfile("SexyUI/configs/" .. name .. ".json"))
    for flag, value in pairs(config) do
        if Library.Flags[flag] then
            Library.Flags[flag] = value
        end
    end
end

if not isfolder("SexyUI") then
    makefolder("SexyUI")
    makefolder("SexyUI/configs")
end

function Library:CreateWindow(name)
    local ScreenGui = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local Shadow = Instance.new("ImageLabel")
    local Credit = Instance.new("TextLabel")
    local TabContainer = Instance.new("ScrollingFrame")
    local TabList = Instance.new("UIListLayout")

    ScreenGui.Name = HttpService:GenerateGUID(false)
    ScreenGui.Parent = CoreGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Main.Name = "Main"
    Main.Parent = ScreenGui
    Main.BackgroundColor3 = Library.Theme.MainColor
    Main.Position = UDim2.new(0.5, -300, 0.5, -175)
    Main.Size = UDim2.new(0, 600, 0, 350)

    Shadow.Name = "Shadow"
    Shadow.Parent = Main
    Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    Shadow.BackgroundTransparency = 1
    Shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    Shadow.Size = UDim2.new(1, 47, 1, 47)
    Shadow.ZIndex = 0
    Shadow.Image = "rbxassetid://6015897843"
    Shadow.ImageColor3 = Color3.new(0, 0, 0)
    Shadow.ImageTransparency = 0.5
    Shadow.ScaleType = Enum.ScaleType.Slice
    Shadow.SliceCenter = Rect.new(49, 49, 450, 450)

    Credit.Name = "Credit"
    Credit.Parent = Main
    Credit.BackgroundTransparency = 1
    Credit.Position = UDim2.new(0, 10, 1, -25)
    Credit.Size = UDim2.new(0, 200, 0, 20)
    Credit.Font = Enum.Font.GothamBold
    Credit.Text = "Created by " .. Library.Credits.Creator
    Credit.TextColor3 = Library.Theme.TextColor
    Credit.TextSize = 12
    Credit.TextXAlignment = Enum.TextXAlignment.Left

    local Window = {}
    Window.Tabs = {}

    local TabContainer = Instance.new("Frame")
    TabContainer.Parent = Main
    TabContainer.BackgroundColor3 = Library.Theme.MainColor
    TabContainer.Size = UDim2.new(1, 0, 1, -40)
    TabContainer.Position = UDim2.new(0, 0, 0, 40)
    TabContainer.ScrollBarThickness = 6

    local TabList = Instance.new("UIListLayout")
    TabList.Parent = TabContainer
    TabList.Padding = UDim.new(0, 5)

    function Window:CreateTab(name)
        local Tab = {}
        Window.Tabs[name] = Tab
        
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name
        TabButton.Parent = TabContainer
        TabButton.BackgroundColor3 = Library.Theme.ElementColor
        TabButton.Size = UDim2.new(1, -10, 0, 30)
        TabButton.Font = Enum.Font.GothamBold
        TabButton.Text = name
        TabButton.TextColor3 = Library.Theme.TextColor
        TabButton.TextSize = 12

        TabButton.MouseButton1Click:Connect(function()
            for _, button in pairs(TabContainer:GetChildren()) do
                if button:IsA("TextButton") then
                    button.BackgroundColor3 = Library.Theme.ElementColor
                end
            end
            TabButton.BackgroundColor3 = Library.Theme.AccentColor
        end)

        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Parent = Main
        TabContent.BackgroundColor3 = Library.Theme.MainColor
        TabContent.Position = UDim2.new(0, 0, 0, 40)
        TabContent.Size = UDim2.new(1, 0, 1, -40)
        TabContent.ScrollBarThickness = 6
        TabContent.Visible = false

        local ContentList = Instance.new("UIListLayout")
        ContentList.Parent = TabContent
        ContentList.Padding = UDim.new(0, 5)

        function Tab:CreateSlider(name, min, max, default, flag, callback)
            Library.Flags[flag] = default
            local Slider = Instance.new("Frame")
            local SliderTitle = Instance.new("TextLabel")
            local SliderValue = Instance.new("TextLabel")
            local SliderBar = Instance.new("Frame")
            local SliderFill = Instance.new("Frame")
            local SliderButton = Instance.new("TextButton")

            Slider.Name = name
            Slider.Parent = TabContent
            Slider.BackgroundColor3 = Library.Theme.ElementColor
            Slider.Size = UDim2.new(1, -10, 0, 45)

            SliderTitle.Parent = Slider
            SliderTitle.Text = name
            SliderTitle.TextColor3 = Library.Theme.TextColor
            SliderTitle.BackgroundTransparency = 1
            SliderTitle.Size = UDim2.new(1, 0, 0, 20)

            SliderValue.Parent = Slider
            SliderValue.Text = tostring(default)
            SliderValue.TextColor3 = Library.Theme.TextColor
            SliderValue.BackgroundTransparency = 1
            SliderValue.Position = UDim2.new(0, 0, 0, 20)
            SliderValue.Size = UDim2.new(1, 0, 0, 20)

            SliderBar.Name = "SliderBar"
            SliderBar.Parent = Slider
            SliderBar.BackgroundColor3 = Library.Theme.AccentColor
            SliderBar.Position = UDim2.new(0, 0, 0, 40)
            SliderBar.Size = UDim2.new(1, 0, 0, 5)

            SliderFill.Name = "SliderFill"
            SliderFill.Parent = SliderBar
            SliderFill.BackgroundColor3 = Library.Theme.AccentColor
            SliderFill.Size = UDim2.new(0, 0, 1, 0)

            SliderButton.Name = "SliderButton"
            SliderButton.Parent = SliderBar
            SliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderButton.Size = UDim2.new(0, 10, 1, 0)

            local dragging = false

            SliderButton.MouseButton1Down:Connect(function()
                dragging = true
            end)

            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)

            SliderButton.MouseMoved:Connect(function()
                if dragging then
                    local mousePos = UserInputService:GetMouseLocation().X
                    local sliderPos = SliderBar.AbsolutePosition.X
                    local sliderWidth = SliderBar.AbsoluteSize.X
                    local percent = math.clamp((mousePos - sliderPos) / sliderWidth, 0, 1)
                    local value = math.floor(min + (max - min) * percent)
                    Library.Flags[flag] = value
                    SliderValue.Text = tostring(value)
                    SliderFill.Size = UDim2.new(percent, 0, 1, 0)
                    if callback then callback(value) end
                end
            end)
        end

        function Tab:CreateKeybind(name, default, flag, callback)
            Library.Flags[flag] = default
            local Keybind = Instance.new("Frame")
            local KeybindButton = Instance.new("TextButton")

            Keybind.Name = name
            Keybind.Parent = TabContent
            Keybind.BackgroundColor3 = Library.Theme.ElementColor
            Keybind.Size = UDim2.new(1, -10, 0, 45)

            KeybindButton.Name = "KeybindButton"
            KeybindButton.Parent = Keybind
            KeybindButton.BackgroundColor3 = Library.Theme.AccentColor
            KeybindButton.Size = UDim2.new(1, 0, 1, 0)
            KeybindButton.Text = "Key: " .. tostring(default)
            KeybindButton.TextColor3 = Library.Theme.TextColor

            KeybindButton.MouseButton1Click:Connect(function()
                KeybindButton.Text = "Press any key..."
                local inputConn
                inputConn = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
                    if not gameProcessedEvent then
                        Library.Flags[flag] = input.KeyCode
                        KeybindButton.Text = "Key: " .. tostring(input.KeyCode)
                        if callback then callback(input.KeyCode) end
                        inputConn:Disconnect()
                    end
                end)
            end)
        end

        function Tab:CreateColorPicker(name, default, flag, callback)
            Library.Flags[flag] = default
            local ColorPicker = Instance.new("Frame")
            local ColorPickerButton = Instance.new("TextButton")
            local ColorFrame = Instance.new("Frame")
            local ColorSelected = Instance.new("Frame")

            ColorPicker.Name = name
            ColorPicker.Parent = TabContent
            ColorPicker.BackgroundColor3 = Library.Theme.ElementColor
            ColorPicker.Size = UDim2.new(1, -10, 0, 45)

            ColorPickerButton.Name = "ColorPickerButton"
            ColorPickerButton.Parent = ColorPicker
            ColorPickerButton.BackgroundColor3 = default
            ColorPickerButton.Size = UDim2.new(1, 0, 1, 0)
            ColorPickerButton.Text = "Color: " .. tostring(default)

            ColorFrame.Parent = ColorPicker
            ColorFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorFrame.Size = UDim2.new(0.5, 0, 0, 5)
            ColorFrame.Position = UDim2.new(0, 0, 0, 20)

            ColorSelected.Parent = ColorFrame
            ColorSelected.BackgroundColor3 = default
            ColorSelected.Size = UDim2.new(0, 0, 1, 0)

            ColorPickerButton.MouseButton1Click:Connect(function()
                local ColorPickerFrame = Instance.new("Frame")
                ColorPickerFrame.Size = UDim2.new(0, 200, 0, 200)
                ColorPickerFrame.Position = UDim2.new(0.5, -100, 0.5, -100)
                ColorPickerFrame.BackgroundColor3 = Library.Theme.MainColor
                ColorPickerFrame.Parent = ScreenGui

                local ColorButton = Instance.new("TextButton")
                ColorButton.Text = "Select Color"
                ColorButton.Size = UDim2.new(1, 0, 0, 30)
                ColorButton.Position = UDim2.new(0, 0, 0.8, 0)
                ColorButton.Parent = ColorPickerFrame

                local CloseButton = Instance.new("TextButton")
                CloseButton.Text = "Close"
                CloseButton.Size = UDim2.new(1, 0, 0, 30)
                CloseButton.Position = UDim2.new(0, 0, 0.9, 0)
                CloseButton.Parent = ColorPickerFrame

                local ColorSelection = Instance.new("Frame")
                ColorSelection.Size = UDim2.new(0.8, 0, 0.8, 0)
                ColorSelection.Position = UDim2.new(0.1, 0, 0.1, 0)
                ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ColorSelection.Parent = ColorPickerFrame

                local ColorPickerImage = Instance.new("ImageLabel")
                ColorPickerImage.Size = UDim2.new(1, 0, 1, 0)
                ColorPickerImage.Image = "rbxassetid://123456" -- Replace with your color picker image asset ID
                ColorPickerImage.Parent = ColorSelection

                ColorPickerImage.MouseButton1Click:Connect(function()
                    local mousePos = UserInputService:GetMouseLocation()
                    -- Implement color picking logic based on mouse position on ColorPickerImage
                    -- Update Library.Flags[flag] and ColorPickerButton.BackgroundColor3
                end)

                CloseButton.MouseButton1Click:Connect(function()
                    ColorPickerFrame:Destroy()
                end)
            end)
        end

        function Tab:CreateDropdown(name, options, flag, callback)
            Library.Flags[flag] = options[1]
            local Dropdown = Instance.new("Frame")
            local DropdownButton = Instance.new("TextButton")
            local DropdownList = Instance.new("Frame")
            local DropdownListLayout = Instance.new("UIListLayout")

            Dropdown.Name = name
            Dropdown.Parent = TabContent
            Dropdown.BackgroundColor3 = Library.Theme.ElementColor
            Dropdown.Size = UDim2.new(1, -10, 0, 45)

            DropdownButton.Name = "DropdownButton"
            DropdownButton.Parent = Dropdown
            DropdownButton.BackgroundColor3 = Library.Theme.AccentColor
            DropdownButton.Size = UDim2.new(1, 0, 1, 0)
            DropdownButton.Text = "Select: " .. options[1]
            DropdownButton.TextColor3 = Library.Theme.TextColor

            DropdownList.Name = "DropdownList"
            DropdownList.Parent = Dropdown
            DropdownList.BackgroundColor3 = Library.Theme.ElementColor
            DropdownList.Size = UDim2.new(1, 0, 0, 0)

            DropdownListLayout.Parent = DropdownList
            DropdownListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            DropdownListLayout.Padding = UDim.new(0, 5)

            for _, option in ipairs(options) do
                local OptionButton = Instance.new("TextButton")
                OptionButton.Name = option
                OptionButton.Parent = DropdownList
                OptionButton.BackgroundColor3 = Library.Theme.AccentColor
                OptionButton.Size = UDim2.new(1, 0, 0, 30)
                OptionButton.Text = option
                OptionButton.TextColor3 = Library.Theme.TextColor

                OptionButton.MouseButton1Click:Connect(function()
                    Library.Flags[flag] = option
                    DropdownButton.Text = "Select: " .. option
                    if callback then callback(option) end
                end)
            end

            DropdownButton.MouseButton1Click:Connect(function()
                DropdownList.Visible = not DropdownList.Visible
            end)
        end

        return Tab
    end

    function Window:CreateConfig(name)
        local ConfigFrame = Instance.new("Frame")
        local LoadButton = Instance.new("TextButton")
        local SaveButton = Instance.new("TextButton")

        ConfigFrame.Name = name
        ConfigFrame.Parent = TabContent
        ConfigFrame.BackgroundColor3 = Library.Theme.ElementColor
        ConfigFrame.Size = UDim2.new(1, -10, 0, 45)

        LoadButton.Name = "LoadButton"
        LoadButton.Parent = ConfigFrame
        LoadButton.BackgroundColor3 = Library.Theme.AccentColor
        LoadButton.Size = UDim2.new(0.5, -5, 1, 0)
        LoadButton.Text = "Load Config"
        LoadButton.TextColor3 = Library.Theme.TextColor

        SaveButton.Name = "SaveButton"
        SaveButton.Parent = ConfigFrame
        SaveButton.BackgroundColor3 = Library.Theme.AccentColor
        SaveButton.Size = UDim2.new(0.5, -5, 1, 0)
        SaveButton.Position = UDim2.new(0.5, 5, 0, 0)
        SaveButton.Text = "Save Config"
        SaveButton.TextColor3 = Library.Theme.TextColor

        LoadButton.MouseButton1Click:Connect(function()
            LoadConfig(name)
        end)

        SaveButton.MouseButton1Click:Connect(function()
            SaveConfig(name)
        end)
    end

    return Window
end

return Library
