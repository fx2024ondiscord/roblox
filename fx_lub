local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")

local Library = {
    Flags = {},
    Theme = {
        MainColor = Color3.fromRGB(30, 30, 30),
        AccentColor = Color3.fromRGB(255, 50, 100),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(40, 40, 40)
    },
    Credits = {
        Creator = "Fx_2024",
        Discord = "Fx_2024",
        Version = "1.0.0"
    },
    Keybinds = {},
    Profiles = {}
}

local function Tween(obj, time, properties)
    return TweenService:Create(obj, TweenInfo.new(time), properties):Play()
end

local function SaveConfig(name)
    local config = {}
    for flag, value in pairs(Library.Flags) do
        config[flag] = value
    end
    writefile("SexyUI/configs/"..name..".json", HttpService:JSONEncode(config))
end

local function LoadConfig(name)
    local config = HttpService:JSONDecode(readfile("SexyUI/configs/"..name..".json"))
    for flag, value in pairs(config) do
        if Library.Flags[flag] then
            Library.Flags[flag] = value
        end
    end
end

if not isfolder("SexyUI") then
    makefolder("SexyUI")
    makefolder("SexyUI/configs")
end

function Library:CreateWindow(name)
    local ScreenGui = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local Shadow = Instance.new("ImageLabel")
    local UICorner = Instance.new("UICorner")
    local Sidebar = Instance.new("Frame")
    local TabContainer = Instance.new("ScrollingFrame")
    local TabList = Instance.new("UIListLayout")
    local ContentContainer = Instance.new("Frame")
    local Credit = Instance.new("TextLabel")
    local TopBar = Instance.new("Frame")
    local Title = Instance.new("TextLabel")

    ScreenGui.Name = HttpService:GenerateGUID(false)
    ScreenGui.Parent = CoreGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Main.Name = "Main"
    Main.Parent = ScreenGui
    Main.BackgroundColor3 = Library.Theme.MainColor
    Main.Position = UDim2.new(0.5, -300, 0.5, -175)
    Main.Size = UDim2.new(0, 600, 0, 350)

    Shadow.Name = "Shadow"
    Shadow.Parent = Main
    Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    Shadow.BackgroundTransparency = 1
    Shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    Shadow.Size = UDim2.new(1, 47, 1, 47)
    Shadow.ZIndex = 0
    Shadow.Image = "rbxassetid://6015897843"
    Shadow.ImageColor3 = Color3.new(0, 0, 0)
    Shadow.ImageTransparency = 0.5
    Shadow.ScaleType = Enum.ScaleType.Slice
    Shadow.SliceCenter = Rect.new(49, 49, 450, 450)

    Credit.Name = "Credit"
    Credit.Parent = Main
    Credit.BackgroundTransparency = 1
    Credit.Position = UDim2.new(0, 10, 1, -25)
    Credit.Size = UDim2.new(0, 200, 0, 20)
    Credit.Font = Enum.Font.GothamBold
    Credit.Text = "Created by "..Library.Credits.Creator
    Credit.TextColor3 = Library.Theme.TextColor
    Credit.TextSize = 12
    Credit.TextXAlignment = Enum.TextXAlignment.Left

    local Window = {}
    Window.Tabs = {}
    
    function Window:CreateTab(name)
        local Tab = {}
        
        local TabButton = Instance.new("TextButton")
        local TabContent = Instance.new("ScrollingFrame")
        local ContentList = Instance.new("UIListLayout")
        
        TabButton.Name = name
        TabButton.Parent = TabContainer
        TabButton.BackgroundColor3 = Library.Theme.ElementColor
        TabButton.Size = UDim2.new(1, -10, 0, 30)
        TabButton.Font = Enum.Font.GothamBold
        TabButton.Text = name
        TabButton.TextColor3 = Library.Theme.TextColor
        TabButton.TextSize = 12
        
        function Tab:CreateSlider(name, min, max, default, flag, callback)
            Library.Flags[flag] = default
            local Slider = Instance.new("Frame")
            local SliderTitle = Instance.new("TextLabel")
            local SliderValue = Instance.new("TextLabel")
            local SliderBar = Instance.new("Frame")
            local SliderFill = Instance.new("Frame")
            local SliderButton = Instance.new("TextButton")
            
            Slider.Name = name
            Slider.Parent = TabContent
            Slider.BackgroundColor3 = Library.Theme.ElementColor
            Slider.Size = UDim2.new(1, -10, 0, 45)
            
            local dragging = false
            
            SliderButton.MouseButton1Down:Connect(function()
                dragging = true
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            SliderButton.MouseMoved:Connect(function()
                if dragging then
                    local mousePos = UserInputService:GetMouseLocation().X
                    local sliderPos = SliderBar.AbsolutePosition.X
                    local sliderWidth = SliderBar.AbsoluteSize.X
                    local percent = math.clamp((mousePos - sliderPos) / sliderWidth, 0, 1)
                    local value = math.floor(min + (max - min) * percent)
                    Library.Flags[flag] = value
                    SliderValue.Text = tostring(value)
                    SliderFill.Size = UDim2.new(percent, 0, 1, 0)
                    if callback then callback(value) end
                end
            end)
        end
        
        function Tab:CreateKeybind(name, default, flag, callback)
            Library.Flags[flag] = default
            local Keybind = Instance.new("Frame")
            local KeybindButton = Instance.new("TextButton")
            
            KeybindButton.MouseButton1Click:Connect(function()
                KeybindButton.Text = "..."
                local input = UserInputService.InputBegan:Wait()
                local key = input.KeyCode
                Library.Flags[flag] = key
                KeybindButton.Text = key.Name
                if callback then callback(key) end
            end)
        end
        
        function Tab:CreateColorPicker(name, default, flag, callback)
            Library.Flags[flag] = default
            local ColorPicker = Instance.new("Frame")
            local ColorDisplay = Instance.new("Frame")
            
            ColorDisplay.BackgroundColor3 = default
            
            local function updateColor(color)
                Library.Flags[flag] = color
                ColorDisplay.BackgroundColor3 = color
                if callback then callback(color) end
            end
        end

        function Tab:CreateDropdown(name, options, default, flag, callback)
            Library.Flags[flag] = default
            local Dropdown = Instance.new("Frame")
            local DropdownButton = Instance.new("TextButton")
            local OptionList = Instance.new("ScrollingFrame")
            
            for _, option in pairs(options) do
                local OptionButton = Instance.new("TextButton")
                OptionButton.MouseButton1Click:Connect(function()
                    Library.Flags[flag] = option
                    DropdownButton.Text = option
                    if callback then callback(option) end
                end)
            end
        end
        
        return Tab
    end
    
    function Window:SaveConfig(name)
        SaveConfig(name)
    end
    
    function Window:LoadConfig(name)
        LoadConfig(name)
    end
    
    function Window:SetTheme(theme)
        for property, color in pairs(theme) do
            Library.Theme[property] = color
        end
    end
    
    return Window
end

return Library
