-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "VulnerabilityCheckerGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the Toggle Button to Open/Close the GUI
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0.15, 0, 0.05, 0)
toggleButton.Position = UDim2.new(0.4, 0, 0.9, 0)
toggleButton.Text = "Open Checker"
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Parent = screenGui

-- Create the Main Frame for the GUI
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0.9, 0, 0.7, 0)
mainFrame.Position = UDim2.new(0.05, 0, 0.1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
mainFrame.BorderSizePixel = 2
mainFrame.Visible = false
mainFrame.Parent = screenGui

-- Create a button to close the MainFrame
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0.08, 0, 0.05, 0)
closeButton.Position = UDim2.new(0.9, -10, 0, 10)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 18
closeButton.Parent = mainFrame

-- Create the Button to Check Vulnerabilities
local checkButton = Instance.new("TextButton")
checkButton.Name = "CheckButton"
checkButton.Size = UDim2.new(0.6, 0, 0.08, 0)
checkButton.Position = UDim2.new(0.2, 0, 0.05, 0)
checkButton.Text = "Check Vulnerabilities"
checkButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
checkButton.TextColor3 = Color3.new(1, 1, 1)
checkButton.Font = Enum.Font.SourceSansBold
checkButton.TextSize = 18
checkButton.Parent = mainFrame

-- Create Frame for Remote Vulnerabilities
local remoteFrame = Instance.new("Frame")
remoteFrame.Name = "RemoteFrame"
remoteFrame.Size = UDim2.new(0.45, 0, 0.7, 0)
remoteFrame.Position = UDim2.new(0.05, 0, 0.2, 0)
remoteFrame.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
remoteFrame.BorderSizePixel = 2
remoteFrame.Parent = mainFrame

-- Create Label for Remote Vulnerabilities
local remoteLabel = Instance.new("TextLabel")
remoteLabel.Name = "RemoteLabel"
remoteLabel.Size = UDim2.new(1, 0, 0.1, 0)
remoteLabel.Position = UDim2.new(0, 0, 0, 0)
remoteLabel.Text = "Remote Vulnerabilities"
remoteLabel.TextColor3 = Color3.new(0, 0, 0)
remoteLabel.BackgroundTransparency = 1
remoteLabel.Font = Enum.Font.SourceSansBold
remoteLabel.TextSize = 18
remoteLabel.Parent = remoteFrame

-- Create ScrollingFrame for Remote Vulnerabilities
local remoteScrollingFrame = Instance.new("ScrollingFrame")
remoteScrollingFrame.Name = "RemoteVulnerabilityList"
remoteScrollingFrame.Size = UDim2.new(1, 0, 0.9, 0)
remoteScrollingFrame.Position = UDim2.new(0, 0, 0.1, 0)
remoteScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
remoteScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
remoteScrollingFrame.ScrollBarThickness = 10
remoteScrollingFrame.Parent = remoteFrame

local uiListLayoutRemote = Instance.new("UIListLayout")
uiListLayoutRemote.Parent = remoteScrollingFrame

-- Create Frame for Other Vulnerabilities
local otherFrame = Instance.new("Frame")
otherFrame.Name = "OtherFrame"
otherFrame.Size = UDim2.new(0.45, 0, 0.7, 0)
otherFrame.Position = UDim2.new(0.5, 0, 0.2, 0)
otherFrame.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
otherFrame.BorderSizePixel = 2
otherFrame.Parent = mainFrame

-- Create Label for Other Vulnerabilities
local otherLabel = Instance.new("TextLabel")
otherLabel.Name = "OtherLabel"
otherLabel.Size = UDim2.new(1, 0, 0.1, 0)
otherLabel.Position = UDim2.new(0, 0, 0, 0)
otherLabel.Text = "Other Vulnerabilities"
otherLabel.TextColor3 = Color3.new(0, 0, 0)
otherLabel.BackgroundTransparency = 1
otherLabel.Font = Enum.Font.SourceSansBold
otherLabel.TextSize = 18
otherLabel.Parent = otherFrame

-- Create ScrollingFrame for Other Vulnerabilities
local otherScrollingFrame = Instance.new("ScrollingFrame")
otherScrollingFrame.Name = "OtherVulnerabilityList"
otherScrollingFrame.Size = UDim2.new(1, 0, 0.9, 0)
otherScrollingFrame.Position = UDim2.new(0, 0, 0.1, 0)
otherScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
otherScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
otherScrollingFrame.ScrollBarThickness = 10
otherScrollingFrame.Parent = otherFrame

local uiListLayoutOther = Instance.new("UIListLayout")
uiListLayoutOther.Parent = otherScrollingFrame

-- Function to Check for Vulnerabilities
local function checkForVulnerabilities()
    for _, child in ipairs(remoteScrollingFrame:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end
    for _, child in ipairs(otherScrollingFrame:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end

    local remoteVulnerabilities = {}
    local otherVulnerabilities = {}

    for _, remote in ipairs(game.ReplicatedStorage:GetDescendants()) do
        if remote:IsA("RemoteEvent") or remote:IsA("RemoteFunction") then
            if remote:GetAttribute("Secure") ~= true then
                table.insert(remoteVulnerabilities, "Exposed Remote: " .. remote.Name)
            end
        end
    end

    for _, part in ipairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and not part.Anchored then
            table.insert(otherVulnerabilities, "Unanchored Part: " .. part.Name)
        end
    end

    for _, script in ipairs(workspace:GetDescendants()) do
        if script:IsA("Script") or script:IsA("LocalScript") then
            if script.Disabled then
                table.insert(otherVulnerabilities, "Disabled Script: " .. script.Name)
            elseif script.Name:lower():find("admin") or script.Name:lower():find("give") then
                table.insert(otherVulnerabilities, "Potential Insecure Script: " .. script.Name)
            end
        end
    end

    for _, vulnerability in ipairs(remoteVulnerabilities) do
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 0, 30)
        frame.BackgroundTransparency = 1
        frame.Parent = remoteScrollingFrame

        local label = Instance.new("TextLabel")
        label.Text = vulnerability
        label.Size = UDim2.new(0.8, 0, 1, 0)
        label.Position = UDim2.new(0, 0, 0, 0)
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.BackgroundTransparency = 1
        label.Parent = frame

        local copyButton = Instance.new("TextButton")
        copyButton.Text = "Copy"
        copyButton.Size = UDim2.new(0.2, 0, 1, 0)
        copyButton.Position = UDim2.new(0.8, 0, 0, 0)
        copyButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
        copyButton.TextColor3 = Color3.new(1, 1, 1)
        copyButton.Parent = frame

        copyButton.MouseButton1Click:Connect(function()
            setclipboard(vulnerability)
        end)
    end

    for _, vulnerability in ipairs(otherVulnerabilities) do
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 0, 30)
        frame.BackgroundTransparency = 1
        frame.Parent = otherScrollingFrame

        local label = Instance.new("TextLabel")
        label.Text = vulnerability
        label.Size = UDim2.new(0.8, 0, 1, 0)
        label.Position = UDim2.new(0, 0, 0, 0)
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.BackgroundTransparency = 1
        label.Parent = frame

        local copyButton = Instance.new("TextButton")
        copyButton.Text = "Copy"
        copyButton.Size = UDim2.new(0.2, 0, 1, 0)
        copyButton.Position = UDim2.new(0.8, 0, 0, 0)
        copyButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
        copyButton.TextColor3 = Color3.new(1, 1, 1)
        copyButton.Parent = frame

        copyButton.MouseButton1Click:Connect(function()
            setclipboard(vulnerability)
        end)
    end
end

-- Toggle Button Functionality
toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    if mainFrame.Visible then
        toggleButton.Text = "Close Checker"
    else
        toggleButton.Text = "Open Checker"
    end
end)

-- Close Button Functionality
closeButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    toggleButton.Text = "Open Checker"
end)

-- Check Button Functionality
checkButton.MouseButton1Click:Connect(checkForVulnerabilities)
