local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")

local Library = {
    Flags = {},
    Theme = {
        Main = Color3.fromRGB(15, 15, 20),
        Secondary = Color3.fromRGB(25, 25, 35),
        Accent = Color3.fromRGB(255, 0, 100),
        Text = Color3.fromRGB(255, 255, 255),
        Stroke = Color3.fromRGB(50, 50, 70),
        Glow = Color3.fromRGB(255, 0, 100)
    }
}

local AnimationPresets = {
    SpringIn = TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
    SlideIn = TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
    Bounce = TweenInfo.new(0.5, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out),
    Smooth = TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
}

function Library:CreateWindow(config)
    config = config or {}
    config.Title = config.Title or "Fx UI Library"
    config.Size = config.Size or UDim2.new(0, 600, 0, 400)

    local Window = {}
    Window.Tabs = {}

    local ScreenGui = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local MainGlow = Instance.new("ImageLabel")
    local UICorner = Instance.new("UICorner")
    local TopBar = Instance.new("Frame")
    local Title = Instance.new("TextLabel")
    local TabContainer = Instance.new("Frame")
    local TabList = Instance.new("UIListLayout")
    local ContentContainer = Instance.new("Frame")
    local Credit = Instance.new("TextLabel")
    
    local function createPulsingGlow()
        local Glow = Instance.new("ImageLabel")
        Glow.Name = "Glow"
        Glow.BackgroundTransparency = 1
        Glow.Position = UDim2.new(0.5, -config.Size.X.Offset/1.5, 0.5, -config.Size.Y.Offset/1.5)
        Glow.Size = UDim2.new(0, config.Size.X.Offset*1.5, 0, config.Size.Y.Offset*1.5)
        Glow.Image = "rbxassetid://7639529947"
        Glow.ImageColor3 = Library.Theme.Glow
        Glow.ImageTransparency = 0.8
        Glow.Parent = Main
        
        RunService.RenderStepped:Connect(function()
            Glow.Rotation = (tick() * 10) % 360
            local scale = 1 + math.sin(tick()) * 0.05
            Glow.Size = UDim2.new(0, config.Size.X.Offset*scale*1.5, 0, config.Size.Y.Offset*scale*1.5)
        end)
    end

    if syn then
        syn.protect_gui(ScreenGui)
    end
    
    ScreenGui.Name = "FxUI"
    ScreenGui.Parent = CoreGui
    
    Main.Name = "Main"
    Main.Parent = ScreenGui
    Main.BackgroundColor3 = Library.Theme.Main
    Main.Position = UDim2.new(0.5, -config.Size.X.Offset / 2, 0.5, -config.Size.Y.Offset / 2)
    Main.Size = UDim2.new(0, 0, 0, 0)
    Main.ClipsDescendants = true
    
    TweenService:Create(Main, AnimationPresets.SpringIn, {
        Size = config.Size,
        Position = UDim2.new(0.5, -config.Size.X.Offset / 2, 0.5, -config.Size.Y.Offset / 2)
    }):Play()
    
    createPulsingGlow()
    
    local Gradient = Instance.new("UIGradient")
    Gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Library.Theme.Main),
        ColorSequenceKeypoint.new(1, Library.Theme.Secondary)
    })
    Gradient.Rotation = 45
    Gradient.Parent = Main

    local gradientRotation = 45
    RunService.RenderStepped:Connect(function()
        gradientRotation = (gradientRotation + 0.1) % 360
        Gradient.Rotation = gradientRotation
    end)

    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = Main
    
    TopBar.Name = "TopBar"
    TopBar.Parent = Main
    TopBar.BackgroundColor3 = Library.Theme.Secondary
    TopBar.Size = UDim2.new(1, 0, 0, 35)
    
    Title.Name = "Title"
    Title.Parent = TopBar
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 15, 0, 0)
    Title.Size = UDim2.new(1, -20, 1, 0)
    Title.Font = Enum.Font.GothamBold
    Title.Text = config.Title
    Title.TextColor3 = Library.Theme.Text
    Title.TextSize = 16
    Title.TextXAlignment = Enum.TextXAlignment.Left

    local TextGlow = Instance.new("ImageLabel")
    TextGlow.Name = "TextGlow"
    TextGlow.BackgroundTransparency = 1
    TextGlow.Position = UDim2.new(0, -15, 0, -15)
    TextGlow.Size = UDim2.new(1, 30, 1, 30)
    TextGlow.Image = "rbxassetid://7639529947"
    TextGlow.ImageColor3 = Library.Theme.Accent
    TextGlow.ImageTransparency = 0.8
    TextGlow.Parent = Title

    local function addHoverEffect(button)
        button.MouseEnter:Connect(function()
            TweenService:Create(button, AnimationPresets.Smooth, {
                BackgroundColor3 = Library.Theme.Accent,
                TextColor3 = Library.Theme.Main
            }):Play()
        end)

        button.MouseLeave:Connect(function()
            TweenService:Create(button, AnimationPresets.Smooth, {
                BackgroundColor3 = Library.Theme.Main,
                TextColor3 = Library.Theme.Text
            }):Play()
        end)
    end

    local function createRipple(parent, x, y)
        local Ripple = Instance.new("Frame")
        Ripple.Position = UDim2.new(0, x, 0, y)
        Ripple.Size = UDim2.new(0, 0, 0, 0)
        Ripple.BackgroundColor3 = Library.Theme.Accent
        Ripple.BackgroundTransparency = 0.6
        Ripple.Parent = parent
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(1, 0)
        UICorner.Parent = Ripple
        
        local rippleSize = math.max(parent.AbsoluteSize.X, parent.AbsoluteSize.Y) * 2
        
        TweenService:Create(Ripple, TweenInfo.new(0.5), {
            Size = UDim2.new(0, rippleSize, 0, rippleSize),
            Position = UDim2.new(0.5, -rippleSize/2, 0.5, -rippleSize/2),
            BackgroundTransparency = 1
        }):Play()
        
        game.Debris:AddItem(Ripple, 0.5)
    end

    local dragging, dragInput, dragStart, startPos
    
    local function updateDrag(input)
        local delta = input.Position - dragStart
        local targetPosition = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        
        TweenService:Create(Main, AnimationPresets.Smooth, {
            Position = targetPosition
        }):Play()
    end

    return Window
end

return Library
